name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: |
        if npm ls eslint > /dev/null 2>&1; then
          npm run lint
        else
          echo "ESLint not configured, skipping..."
        fi
      
    - name: Run tests
      run: npm test
      
    - name: Build applications
      run: npm run build
      
    - name: Test health endpoints
      run: |
        cd apps/server
        npm start &
        SERVER_PID=$!
        sleep 5
        curl -f http://localhost:8787/api/health || exit 1
        curl -f http://localhost:8787/api/cache/stats || exit 1
        kill $SERVER_PID

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Check for outdated packages
      run: npm outdated || true

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./apps/server
        push: false
        tags: yafa-prompts-server:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Start server
      run: |
        cd apps/server
        npm start &
        SERVER_PID=$!
        echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
        sleep 5
        
    - name: Run performance tests
      run: |
        # Test response times
        for i in {1..5}; do
          time curl -s -X POST http://localhost:8787/api/generate \
            -H "Content-Type: application/json" \
            -d '{"input": "test prompt", "mode": "General Purpose"}' \
            > /dev/null
        done
        
        # Test cache performance
        echo "Testing cache performance..."
        curl -s http://localhost:8787/api/cache/stats
        
    - name: Cleanup
      run: kill $SERVER_PID || true
